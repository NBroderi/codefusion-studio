{"version":3,"file":"cfs-utilities.cjs","sources":["../../../../common/utilities/cfs-utilities.ts"],"sourcesContent":["/**\n *\n * Copyright (c) 2025 Analog Devices, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n/**\n * Evaluates a template string with nested template literals\n * @param template - The template string to evaluate\n * @param context - The context to evaluate the template literal from\n * @returns a function to evaluate the template string\n */\nexport function evalNestedTemplateLiterals(\n  template: string,\n  context: any,\n): string {\n  return new Function(\"context\", `return \\`${template}\\`;`)(context);\n}\n\n/**\n * Converts a string to title case\n * @param str - The string to convert to title case\n * @returns The string in title case\n */\nexport function titleCase(str: string) {\n  return str\n    .toLowerCase()\n    .split(\" \")\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(\" \");\n}\n"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;AAaG;AAEH;;;;;AAKG;AACa,SAAA,0BAA0B,CACxC,QAAgB,EAChB,OAAY,EAAA;AAEZ,IAAA,OAAO,IAAI,QAAQ,CAAC,SAAS,EAAE,CAAA,SAAA,EAAY,QAAQ,CAAA,GAAA,CAAK,CAAC,CAAC,OAAO,CAAC;AACpE;AAEA;;;;AAIG;AACG,SAAU,SAAS,CAAC,GAAW,EAAA;AACnC,IAAA,OAAO;AACJ,SAAA,WAAW;SACX,KAAK,CAAC,GAAG;SACT,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;SAC1D,IAAI,CAAC,GAAG,CAAC;AACd;;;;;"}