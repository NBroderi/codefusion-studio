<%
/**
 * Copyright (c) 2025 Analog Devices, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

// Include common plugin code
eval(this.render("common/utilities/utilities.js"));

// Get the name to use for this partition.
function getRegionName(region) {
  return region.Config?.NAME_OVERRIDE?.length ? region.Config?.NAME_OVERRIDE : region.Name;
}

// Get the maximum length of the region name.
function maxRegionNameLength() {
  let maxLen = 0;
  for (const region of getProject()?.Partitions ?? []) {
    if (region.IsOwner && getRegionName(region).length > maxLen) {
      maxLen = getRegionName(region).length;
    }
  }
  return maxLen;
}

// Get the maximum length of the partition name.
function maxNameLength() {
  let maxLen = 0;
  for (const region of getProject()?.Partitions ?? []) {
    if (region.IsOwner && region.Name.length > maxLen) {
      maxLen = region.Name.length;
    }
  }
  return maxLen;
}

// Get the LD script base name
function getLdBaseName() {
  return it.cfsconfig.Soc.toLowerCase() + (getProject()?.CoreId === "RV" ? "_riscv" : "");
}
%>
<%~ include("../../common/utilities/copyright-header.eta", it) %>

MEMORY {
<%~ include("./" + it.cfsconfig.Soc.toLowerCase() + "/memory-" + getProject()?.CoreId?.toLowerCase() + ".ld.eta", it) %>
<% for (const region of getProject()?.Partitions ?? []) { %>
<%   if (region.IsOwner) { %>
    <%= getRegionName(region).padEnd(maxRegionNameLength(), " ") %> <%= ("(" + region.Access.toLowerCase().replace(/\//g, "") + ")").padEnd(5, " ") %> : ORIGIN = <%= region.StartAddress %>, LENGTH = 0x<%= region.Size.toString(16).padStart(8, "0") %> /* <%= region.Name.padEnd(maxNameLength(), " ") %> */
<%   } %>
<% } %>
}

INCLUDE <%= getLdBaseName() %>.sects.ld
